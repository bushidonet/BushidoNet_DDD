// <auto-generated />
using System;
using AMochika.Infrastructure.Configuration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AMochika.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AMochika.Core.Entities.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("AMochika.Core.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1990, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "juan.perez@gmail.com",
                            FirstName = "Juan",
                            LastName = "Pérez",
                            Phone = "555-123-4567"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1985, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "maria.gomez@hotmail.com",
                            FirstName = "María",
                            LastName = "Gómez",
                            Phone = "555-987-6543"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1992, 7, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "carlos.rodriguez@yahoo.com",
                            FirstName = "Carlos",
                            LastName = "Rodríguez",
                            Phone = "555-234-5678"
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(1988, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ana.martinez@outlook.com",
                            FirstName = "Ana",
                            LastName = "Martínez",
                            Phone = "555-345-6789"
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(1995, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "luis.hernandez@gmail.com",
                            FirstName = "Luis",
                            LastName = "Hernández",
                            Phone = "555-456-7890"
                        },
                        new
                        {
                            Id = 6,
                            BirthDate = new DateTime(1987, 8, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "laura.sanchez@gmail.com",
                            FirstName = "Laura",
                            LastName = "Sánchez",
                            Phone = "555-567-8901"
                        },
                        new
                        {
                            Id = 7,
                            BirthDate = new DateTime(1993, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jose.torres@gmail.com",
                            FirstName = "José",
                            LastName = "Torres",
                            Phone = "555-678-9012"
                        },
                        new
                        {
                            Id = 8,
                            BirthDate = new DateTime(1991, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sofia.diaz@yahoo.com",
                            FirstName = "Sofía",
                            LastName = "Díaz",
                            Phone = "555-789-0123"
                        },
                        new
                        {
                            Id = 9,
                            BirthDate = new DateTime(1989, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "miguel.ruiz@outlook.com",
                            FirstName = "Miguel",
                            LastName = "Ruiz",
                            Phone = "555-890-1234"
                        },
                        new
                        {
                            Id = 10,
                            BirthDate = new DateTime(1994, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "camila.lopez@hotmail.com",
                            FirstName = "Camila",
                            LastName = "López",
                            Phone = "555-901-2345"
                        });
                });

            modelBuilder.Entity("AMochika.Core.Entities.MedicalHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Diagnosis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DiagnosisDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("MedicalHistories");
                });

            modelBuilder.Entity("AMochika.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description of Product A",
                            Name = "Product A",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description of Product B",
                            Name = "Product B",
                            Price = 200.00m
                        },
                        new
                        {
                            Id = 3,
                            Description = "Description of Product C",
                            Name = "Product C",
                            Price = 150.00m
                        },
                        new
                        {
                            Id = 4,
                            Description = "Description of Product D",
                            Name = "Product D",
                            Price = 120.00m
                        },
                        new
                        {
                            Id = 5,
                            Description = "Description of Product E",
                            Name = "Product E",
                            Price = 250.00m
                        },
                        new
                        {
                            Id = 6,
                            Description = "Description of Product F",
                            Name = "Product F",
                            Price = 180.00m
                        },
                        new
                        {
                            Id = 7,
                            Description = "Description of Product G",
                            Name = "Product G",
                            Price = 220.00m
                        },
                        new
                        {
                            Id = 8,
                            Description = "Description of Product H",
                            Name = "Product H",
                            Price = 300.00m
                        },
                        new
                        {
                            Id = 9,
                            Description = "Description of Product I",
                            Name = "Product I",
                            Price = 350.00m
                        },
                        new
                        {
                            Id = 10,
                            Description = "Description of Product J",
                            Name = "Product J",
                            Price = 400.00m
                        });
                });

            modelBuilder.Entity("AMochika.Core.Entities.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Purchases");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 3,
                            Date = new DateTime(2024, 12, 15, 1, 56, 5, 466, DateTimeKind.Local).AddTicks(1740),
                            IsDeleted = false,
                            TotalAmount = 260.87m
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 5,
                            Date = new DateTime(2024, 12, 1, 1, 56, 5, 481, DateTimeKind.Local).AddTicks(6940),
                            IsDeleted = false,
                            TotalAmount = 541.35m
                        },
                        new
                        {
                            Id = 3,
                            ClientId = 10,
                            Date = new DateTime(2024, 12, 25, 1, 56, 5, 481, DateTimeKind.Local).AddTicks(6950),
                            IsDeleted = false,
                            TotalAmount = 957.70m
                        },
                        new
                        {
                            Id = 4,
                            ClientId = 4,
                            Date = new DateTime(2024, 12, 9, 1, 56, 5, 481, DateTimeKind.Local).AddTicks(6960),
                            IsDeleted = false,
                            TotalAmount = 537.66m
                        },
                        new
                        {
                            Id = 5,
                            ClientId = 10,
                            Date = new DateTime(2024, 12, 16, 1, 56, 5, 481, DateTimeKind.Local).AddTicks(6960),
                            IsDeleted = false,
                            TotalAmount = 344.77m
                        },
                        new
                        {
                            Id = 6,
                            ClientId = 2,
                            Date = new DateTime(2024, 12, 16, 1, 56, 5, 481, DateTimeKind.Local).AddTicks(6960),
                            IsDeleted = false,
                            TotalAmount = 932.24m
                        },
                        new
                        {
                            Id = 7,
                            ClientId = 2,
                            Date = new DateTime(2024, 12, 10, 1, 56, 5, 481, DateTimeKind.Local).AddTicks(6960),
                            IsDeleted = false,
                            TotalAmount = 356.73m
                        },
                        new
                        {
                            Id = 8,
                            ClientId = 10,
                            Date = new DateTime(2024, 12, 5, 1, 56, 5, 481, DateTimeKind.Local).AddTicks(6990),
                            IsDeleted = false,
                            TotalAmount = 890.50m
                        },
                        new
                        {
                            Id = 9,
                            ClientId = 2,
                            Date = new DateTime(2024, 11, 26, 1, 56, 5, 481, DateTimeKind.Local).AddTicks(6990),
                            IsDeleted = false,
                            TotalAmount = 686.40m
                        },
                        new
                        {
                            Id = 10,
                            ClientId = 2,
                            Date = new DateTime(2024, 11, 30, 1, 56, 5, 481, DateTimeKind.Local).AddTicks(6990),
                            IsDeleted = false,
                            TotalAmount = 1031.44m
                        },
                        new
                        {
                            Id = 11,
                            ClientId = 8,
                            Date = new DateTime(2024, 12, 10, 1, 56, 5, 481, DateTimeKind.Local).AddTicks(7000),
                            IsDeleted = false,
                            TotalAmount = 608.21m
                        },
                        new
                        {
                            Id = 12,
                            ClientId = 9,
                            Date = new DateTime(2024, 12, 12, 1, 56, 5, 481, DateTimeKind.Local).AddTicks(7000),
                            IsDeleted = false,
                            TotalAmount = 590.69m
                        },
                        new
                        {
                            Id = 13,
                            ClientId = 6,
                            Date = new DateTime(2024, 12, 4, 1, 56, 5, 481, DateTimeKind.Local).AddTicks(7000),
                            IsDeleted = false,
                            TotalAmount = 800.01m
                        },
                        new
                        {
                            Id = 14,
                            ClientId = 4,
                            Date = new DateTime(2024, 11, 26, 1, 56, 5, 481, DateTimeKind.Local).AddTicks(7000),
                            IsDeleted = false,
                            TotalAmount = 519.47m
                        },
                        new
                        {
                            Id = 15,
                            ClientId = 6,
                            Date = new DateTime(2024, 12, 20, 1, 56, 5, 481, DateTimeKind.Local).AddTicks(7000),
                            IsDeleted = false,
                            TotalAmount = 660.76m
                        },
                        new
                        {
                            Id = 16,
                            ClientId = 1,
                            Date = new DateTime(2024, 12, 5, 1, 56, 5, 481, DateTimeKind.Local).AddTicks(7000),
                            IsDeleted = false,
                            TotalAmount = 433.23m
                        },
                        new
                        {
                            Id = 17,
                            ClientId = 7,
                            Date = new DateTime(2024, 12, 13, 1, 56, 5, 481, DateTimeKind.Local).AddTicks(7000),
                            IsDeleted = false,
                            TotalAmount = 506.07m
                        },
                        new
                        {
                            Id = 18,
                            ClientId = 7,
                            Date = new DateTime(2024, 12, 2, 1, 56, 5, 481, DateTimeKind.Local).AddTicks(7010),
                            IsDeleted = false,
                            TotalAmount = 425.53m
                        },
                        new
                        {
                            Id = 19,
                            ClientId = 3,
                            Date = new DateTime(2024, 12, 14, 1, 56, 5, 481, DateTimeKind.Local).AddTicks(7010),
                            IsDeleted = false,
                            TotalAmount = 956.36m
                        },
                        new
                        {
                            Id = 20,
                            ClientId = 8,
                            Date = new DateTime(2024, 12, 18, 1, 56, 5, 481, DateTimeKind.Local).AddTicks(7010),
                            IsDeleted = false,
                            TotalAmount = 116.11m
                        });
                });

            modelBuilder.Entity("AMochika.Core.Entities.PurchaseDetail", b =>
                {
                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PurchaseId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("PurchaseDetails");

                    b.HasData(
                        new
                        {
                            PurchaseId = 1,
                            ProductId = 1,
                            Id = 1,
                            Quantity = 2,
                            UnitPrice = 100.00m
                        },
                        new
                        {
                            PurchaseId = 2,
                            ProductId = 2,
                            Id = 2,
                            Quantity = 1,
                            UnitPrice = 200.00m
                        },
                        new
                        {
                            PurchaseId = 1,
                            ProductId = 3,
                            Id = 3,
                            Quantity = 3,
                            UnitPrice = 150.00m
                        },
                        new
                        {
                            PurchaseId = 2,
                            ProductId = 4,
                            Id = 4,
                            Quantity = 1,
                            UnitPrice = 120.00m
                        },
                        new
                        {
                            PurchaseId = 1,
                            ProductId = 5,
                            Id = 5,
                            Quantity = 2,
                            UnitPrice = 250.00m
                        },
                        new
                        {
                            PurchaseId = 2,
                            ProductId = 6,
                            Id = 6,
                            Quantity = 1,
                            UnitPrice = 180.00m
                        },
                        new
                        {
                            PurchaseId = 1,
                            ProductId = 7,
                            Id = 7,
                            Quantity = 1,
                            UnitPrice = 220.00m
                        },
                        new
                        {
                            PurchaseId = 2,
                            ProductId = 8,
                            Id = 8,
                            Quantity = 1,
                            UnitPrice = 300.00m
                        },
                        new
                        {
                            PurchaseId = 1,
                            ProductId = 9,
                            Id = 9,
                            Quantity = 1,
                            UnitPrice = 350.00m
                        },
                        new
                        {
                            PurchaseId = 2,
                            ProductId = 10,
                            Id = 10,
                            Quantity = 1,
                            UnitPrice = 400.00m
                        });
                });

            modelBuilder.Entity("AMochika.Core.Entities.Recommendation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RecommendationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ProductId");

                    b.ToTable("Recommendations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            ProductId = 1,
                            Reason = "Highly recommended product!",
                            RecommendationDate = new DateTime(2024, 12, 26, 1, 56, 5, 481, DateTimeKind.Local).AddTicks(9120)
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 2,
                            ProductId = 2,
                            Reason = "Great value for money!",
                            RecommendationDate = new DateTime(2024, 12, 26, 1, 56, 5, 481, DateTimeKind.Local).AddTicks(9310)
                        },
                        new
                        {
                            Id = 3,
                            ClientId = 1,
                            ProductId = 5,
                            Reason = "Best choice for premium customers!",
                            RecommendationDate = new DateTime(2024, 12, 26, 1, 56, 5, 481, DateTimeKind.Local).AddTicks(9310)
                        },
                        new
                        {
                            Id = 4,
                            ClientId = 2,
                            ProductId = 7,
                            Reason = "Excellent durability!",
                            RecommendationDate = new DateTime(2024, 12, 26, 1, 56, 5, 481, DateTimeKind.Local).AddTicks(9310)
                        },
                        new
                        {
                            Id = 5,
                            ClientId = 1,
                            ProductId = 10,
                            Reason = "Amazing quality and performance!",
                            RecommendationDate = new DateTime(2024, 12, 26, 1, 56, 5, 481, DateTimeKind.Local).AddTicks(9310)
                        });
                });

            modelBuilder.Entity("AMochika.Core.Entities.Appointment", b =>
                {
                    b.HasOne("AMochika.Core.Entities.Client", "Client")
                        .WithMany("Appointments")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("AMochika.Core.Entities.MedicalHistory", b =>
                {
                    b.HasOne("AMochika.Core.Entities.Client", "Client")
                        .WithMany("MedicalHistories")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("AMochika.Core.Entities.Purchase", b =>
                {
                    b.HasOne("AMochika.Core.Entities.Client", "Client")
                        .WithMany("Purchases")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("AMochika.Core.Entities.PurchaseDetail", b =>
                {
                    b.HasOne("AMochika.Core.Entities.Product", "Product")
                        .WithMany("PurchaseDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AMochika.Core.Entities.Purchase", "Purchase")
                        .WithMany("PurchaseDetails")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("AMochika.Core.Entities.Recommendation", b =>
                {
                    b.HasOne("AMochika.Core.Entities.Client", "Client")
                        .WithMany("Recommendations")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AMochika.Core.Entities.Product", "Product")
                        .WithMany("Recommendations")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("AMochika.Core.Entities.Client", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("MedicalHistories");

                    b.Navigation("Purchases");

                    b.Navigation("Recommendations");
                });

            modelBuilder.Entity("AMochika.Core.Entities.Product", b =>
                {
                    b.Navigation("PurchaseDetails");

                    b.Navigation("Recommendations");
                });

            modelBuilder.Entity("AMochika.Core.Entities.Purchase", b =>
                {
                    b.Navigation("PurchaseDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
